{
    "openapi": "3.0.2",
    "info": {
        "title": "Vibely API",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080/api/v1",
            "description": "Backend server for Vibely"
        }
    ],
    "security": [
        {
            "ApiKeyAuth": []
        }
    ],
    "paths": {
        "/users/{id}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "description": "Users' unique identifier"
                }
            ],
            "get": {
                "tags": ["USER"],
                "summary": "Get user information by id",
                "description": "Retrieve information form a specific user identifier",
                "responses": {
                    "200": {
                        "description": "Users' information retrieved successfully",
                        "content": {
                            "application/json": {
                                "example": {
                                    "userId": "5c78e091-59c9-42b9-bf72-a7e148ec46c1",
                                    "username": "jdoe",
                                    "nickname": "John Doe",
                                    "email": "johndoe@email.com",
                                    "state": "ENABLED",
                                    "privacy": "PUBLIC",
                                    "followers": [
                                        "cc8ea183-e5d9-40b1-a7c3-0e66b7ec4a45",
                                        "b668bc51-4842-48b9-a6f4-1caa51a6643a"
                                    ],
                                    "following": [
                                        "cc8ea183-e5d9-40b1-a7c3-0e66b7ec4a45"
                                    ],
                                    "posts": [
                                        "2c9cbb7a-0169-45f4-80f3-1c785e2f7f70",
                                        "bb314292-4996-41cf-af52-f28c55f84bef"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The user was not found"
                    }
                }
            },
            "put": {
                "tags": ["USER"],
                "summary": "Modify user information by id",
                "description": "Modifies users' username, nickname, password or email",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API Key"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "type": "object",
                                        "required": [
                                            "password"
                                        ],
                                        "properties": {
                                            "username": {
                                                "type": "string",
                                                "description": "Users' name"
                                            },
                                            "nickname": {
                                                "type": "string",
                                                "description": "Users' nickname"
                                            },
                                            "password": {
                                                "type": "string",
                                                "description": "Users' password"
                                            },
                                            "email": {
                                                "type": "string",
                                                "description": "Users' email"
                                            }
                                        }
                                    }
                                ],
                                "example": {
                                    "username": "joedoe"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Credentials modification was successful",
                        "content": {
                            "application/json": {
                                "example":{
                                    "userId": "5c78e091-59c9-42b9-bf72-a7e148ec46c1",
                                    "username": "joedoe",
                                    "nickname": "John Doe",
                                    "email": "johndoe@email.com",
                                    "state": "ENABLED",
                                    "privacy": "PUBLIC"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": ["USER"],
                "summary": "Delete a User by id",
                "description": "Deletes an user from Vibely",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Api-key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API Key"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User was deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/auth": {
            "post": {
                "tags": ["USER"],
                "summary": "Authenticate user",
                "description": "Authenticate a user using username and password",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication was successful",
                        "content": {
                            "application/json": {
                                "example": {
                                    "apiKey": "/NZjs+/WrlC029k+ahQQF+cr/uFrrRrC0ZODzm3mJO8="
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials, authentication failed"
                    }
                }
            }
        },
        "/users/signup": {
            "post": {
                "tags": ["USER"],
                "summary": "Sign up a new user",
                "description": "",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignup"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Invalid username or password"
                    }
                }
            }
        },
        "/users/username/{username}": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Username / Nickname",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "description": "Username / Nickname to search by"
                }
            ],
            "get": {
                "tags": ["USER"],
                "summary": "Search user",
                "description": "Search user by username or nickname",
                "responses": {
                    "200": {
                        "description": "Search was successful",
                        "content": {
                            "application/json": {
                                "example":{
                                    "userId": "5c78e091-59c9-42b9-bf72-a7e148ec46c1",
                                    "username": "joedoe",
                                    "nickname": "John Doe",
                                    "email": "johndoe@email.com",
                                    "state": "ENABLED",
                                    "privacy": "PUBLIC"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No user was found"
                    }
                }
            }

        },
        "/users/follow": {
            "put": {
                "tags": ["USER"],
                "summary": "follow a User",
                "description": "Follow a user by its username",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API Key"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserFollow"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Followed successfully"
                    },
                    "400":{
                        "description": "invalid username"
                    },
                    "404":{
                        "description": "user not found"
                    }
                }
                
            }
        },
        "/chats/create":{
            "post": {
                "tags": ["CHAT"],
                "summary": "Create a new chat",
                "description": "Create a new chat",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatCreation"
                            },
                            "example": {
                                "chat_name":"Chatting",
                                "members": ["johndoe", "John_Doe2", "jhonnydoe"]
                            }
                            
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Chat created successfully"
                    },
                    "400": {
                        "description": "Creation data is invalid"
                    }
                }
            }
        },
        "/chats/{chatname}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "ChatId",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "description": "Chat unique identifier"
                }
            ],
            "get": {
                "tags": ["CHAT"],
                "summary": "Get Chat information",
                "description": "Retrieve information from a specific Chat identifier",
                "responses": {
                    "200": {
                        "description": "Chat information retrieved successfully",
                        "content": {
                            "application/json": {
                                "example": {
                                    "ChatName": "chating",
                                    "ChatMembers": ["John Doe", "Jhon Doe2", "Jhon Doe3"],
                                    "Messages": ["John Doe: Hello There", "Jhon Doe2: Hello World", "Jhon Doe3: Hello Chat"]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chat not found"
                    }
                }
            },
            "put": {
                "tags": ["CHAT"],
                "summary": "Modifies Chat information",
                "description": "Modifies Chat name or members",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API Key"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "type": "object",
                                        "required": [
                                            "password"
                                        ],
                                        "properties": {
                                            "chatname": {
                                                "type": "string",
                                                "description": "chat name"
                                            },
                                            "members": {
                                                "type": "array",
                                                "description": "chat members"
                                            }
                                        }
                                    }
                                ],
                                "example": {
                                    "chat_name":"ChattingMore",
                                    "members": ["johndoefriend", "John_Doe7", "jhonnydoe4"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Chat modification was successful",
                        "content": {
                            "application/json": {
                                "example":{
                                    "chat_name":"ChattingMore",
                                    "members": ["johndoe", "John_Doe2", "jhonnydoe",
                                    "johndoefriend", "John_Doe7", "jhonnydoe4"]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            },
            "delete": {
                "tags": ["CHAT"],
                "summary": "Delete a chat",
                "description": "Deletes a chat",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API Key"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Chat deleted successfully"
                    },
                    "404": {
                        "description": "Desired chat was not found"
                    }
                }
            }
        },
        "/messages/send":{
            "parameters": [
                {
                    "in": "path",
                    "name": "chatId",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "description": "Chat unique identifier"
                }
            ],
            "post": {
                "tags": ["MESSAGE"],
                "summary": "Send a message to a chat",
                "description": "Send a message to a chat",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message sent successfully"
                    },
                    "400": {
                        "description": "Creation data is invalid"
                    }
                }
            }
        },
        "/messages": {
            "parameters": [
                {
                    "in": "path",
                    "name": "messageId",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "description": "message unique identifier"
                }
            ],
            "get": {
                "tags": ["MESSAGE"],
                "summary": "Get message information",
                "description": "Retrieve information from a specific message identifier",
                "responses": {
                    "200": {
                        "description": "message information retrieved successfully",
                        "content": {
                            "application/json": {
                                "example": {
                                    "sender": "jhondoe",
                                    "content": "Hello World"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Desired message was not found"
                    }
                }
            },
            "put": {
                "tags": ["MESSAGE"],
                "summary": "Modifies message content",
                "description": "Modifies message content",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API Key"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "type": "object",
                                        "required": [
                                            "new_content"
                                        ],
                                        "properties": {
                                            "new_content": {
                                                "type": "string",
                                                "description": "new content for the message"
                                            }
                                        }
                                    }
                                ],
                                "example": {
                                    "new_content": "Hello Chat"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message content was updated"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            },
            "delete": {
                "tags": ["MESSAGE"],
                "summary": "",
                "description": "Deletes an MESSAGE from Chat",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API Key"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Message was deleted successfully"
                    },
                    "404": {
                        "description": "Desired message was not found"
                    }
                }
            }
        },
        "/posts/create":{
            "post": {
                "tags": ["POST"],
                "summary": "Create a Post",
                "description": "Create a Post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCreation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post created successfully"
                    },
                    "400": {
                        "description": "Creation data is invalid"
                    }
                }
            }
        },
        "/posts": {
            "parameters": [
                {
                    "in": "path",
                    "name": "PostId",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "description": "Post unique identifier"
                }
            ],
            "get": {
                "tags": ["POST"],
                "summary": "Get POST information",
                "description": "Retrieve information from a specific Chat identifier",
                "responses": {
                    "200": {
                        "description": "Post information retrieved successfully",
                        "content": {
                            "application/json": {
                                "example": {
                                    "Owner": "johndoe",
                                    "content": "Hello World",
                                    "likes": "30",
                                    "saves": "15"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Desired post was not found"
                    }
                }
            },
            "put": {
                "tags": ["POST"],
                "summary": "Modifies POST information",
                "description": "Modifies post information",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API Key"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "type": "object",
                                        "required": [
                                            "new_content"
                                        ],
                                        "properties": {
                                            "new_content": {
                                                "type": "string",
                                                "description": "content to modify"
                                            }
                                        }
                                    }
                                ],
                                "example": {
                                    "new_content": "Hello World"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post update was successful"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            },
            "delete": {
                "tags": ["POST"],
                "summary": "",
                "description": "Deletes a POST",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API Key"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Post was deleted successfully"
                    },
                    "404": {
                        "description": "Desired post was not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "X-Api-Key",
                "description": "Provide your API key in the 'X-Api-Key' header."
            }
        },
        "schemas": {
            "UserGet": {

            },
            "UserPut": {

            },
            "UserLogin": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Users' name"
                    },
                    "password": {
                        "type": "string",
                        "description": "Users' password"
                    }
                },
                "example": {
                    "username": "jdoe",
                    "password": "i%PHUUBi#5N&"
                }
            },
            "UserSignup": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Users' username"
                    },
                    "nickname": {
                        "type": "string",
                        "description": "Users' nickname"
                    },
                    "password": {
                        "type": "string",
                        "description": "Users' password"
                    },
                    "email": {
                        "type": "string",
                        "description": "Users' email"
                    }
                },
                "example": {
                    "username": "jdoe",
                    "nickname": "John Doe",
                    "password": "i%PHUUBi#5N&",
                    "email": "johndoe@email.com"
                }
            },
            "UserFollow": {
                "type":"object",
                "properties": {
                    "username":{
                        "type": "string",
                        "description": "Followed users' Username"
                    }
                },
                "example": {
                    "username":"jennifer"
                }
            },
            "ChatCreation":{
                "type": "object",
                "properties": {
                    "members": {
                        "type": "array",
                        "description": "Members list"
                    }
                }
            },
            "SendMessage":{
                "type": "object",
                "properties": {
                    "sender_username": {
                        "type": "string",
                        "description": "Sender's username"
                    },
                    "content": {
                        "type": "string",
                        "description": "content of the message"
                    }
                }
            },
            "PostCreation":{
                "type": "object",
                "properties": {
                    "owner_username": {
                        "type": "string",
                        "description": "Post Owner username"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content of the post"
                    }
                }
            }
        }
    }
}